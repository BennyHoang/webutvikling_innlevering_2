#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NyheterApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AuthorDB")]
	public partial class DataAuthorOrmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertNews(News instance);
    partial void UpdateNews(News instance);
    partial void DeleteNews(News instance);
    #endregion
		
		public DataAuthorOrmDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AuthorDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAuthorOrmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAuthorOrmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAuthorOrmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAuthorOrmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<News> News
		{
			get
			{
				return this.GetTable<News>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Author")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Fornavn;
		
		private string _Etternavn;
		
		private string _Mobil;
		
		private System.Nullable<int> _NyhetID;
		
		private EntityRef<News> _News;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFornavnChanging(string value);
    partial void OnFornavnChanged();
    partial void OnEtternavnChanging(string value);
    partial void OnEtternavnChanged();
    partial void OnMobilChanging(string value);
    partial void OnMobilChanged();
    partial void OnNyhetIDChanging(System.Nullable<int> value);
    partial void OnNyhetIDChanged();
    #endregion
		
		public Author()
		{
			this._News = default(EntityRef<News>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fornavn", DbType="NVarChar(50)")]
		public string Fornavn
		{
			get
			{
				return this._Fornavn;
			}
			set
			{
				if ((this._Fornavn != value))
				{
					this.OnFornavnChanging(value);
					this.SendPropertyChanging();
					this._Fornavn = value;
					this.SendPropertyChanged("Fornavn");
					this.OnFornavnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Etternavn", DbType="NVarChar(50)")]
		public string Etternavn
		{
			get
			{
				return this._Etternavn;
			}
			set
			{
				if ((this._Etternavn != value))
				{
					this.OnEtternavnChanging(value);
					this.SendPropertyChanging();
					this._Etternavn = value;
					this.SendPropertyChanged("Etternavn");
					this.OnEtternavnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobil", DbType="NChar(10)")]
		public string Mobil
		{
			get
			{
				return this._Mobil;
			}
			set
			{
				if ((this._Mobil != value))
				{
					this.OnMobilChanging(value);
					this.SendPropertyChanging();
					this._Mobil = value;
					this.SendPropertyChanged("Mobil");
					this.OnMobilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NyhetID", DbType="Int")]
		public System.Nullable<int> NyhetID
		{
			get
			{
				return this._NyhetID;
			}
			set
			{
				if ((this._NyhetID != value))
				{
					if (this._News.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNyhetIDChanging(value);
					this.SendPropertyChanging();
					this._NyhetID = value;
					this.SendPropertyChanged("NyhetID");
					this.OnNyhetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="News_Author", Storage="_News", ThisKey="NyhetID", OtherKey="Id", IsForeignKey=true)]
		public News News
		{
			get
			{
				return this._News.Entity;
			}
			set
			{
				News previousValue = this._News.Entity;
				if (((previousValue != value) 
							|| (this._News.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._News.Entity = null;
						previousValue.Authors.Remove(this);
					}
					this._News.Entity = value;
					if ((value != null))
					{
						value.Authors.Add(this);
						this._NyhetID = value.Id;
					}
					else
					{
						this._NyhetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("News");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Tittel;
		
		private string _Tekst;
		
		private System.Nullable<System.DateTime> _DatoPostet;
		
		private string _BildeSrc;
		
		private EntitySet<Author> _Authors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTittelChanging(string value);
    partial void OnTittelChanged();
    partial void OnTekstChanging(string value);
    partial void OnTekstChanged();
    partial void OnDatoPostetChanging(System.Nullable<System.DateTime> value);
    partial void OnDatoPostetChanged();
    partial void OnBildeSrcChanging(string value);
    partial void OnBildeSrcChanged();
    #endregion
		
		public News()
		{
			this._Authors = new EntitySet<Author>(new Action<Author>(this.attach_Authors), new Action<Author>(this.detach_Authors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tittel", DbType="NVarChar(50)")]
		public string Tittel
		{
			get
			{
				return this._Tittel;
			}
			set
			{
				if ((this._Tittel != value))
				{
					this.OnTittelChanging(value);
					this.SendPropertyChanging();
					this._Tittel = value;
					this.SendPropertyChanged("Tittel");
					this.OnTittelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tekst", DbType="NVarChar(MAX)")]
		public string Tekst
		{
			get
			{
				return this._Tekst;
			}
			set
			{
				if ((this._Tekst != value))
				{
					this.OnTekstChanging(value);
					this.SendPropertyChanging();
					this._Tekst = value;
					this.SendPropertyChanged("Tekst");
					this.OnTekstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatoPostet", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatoPostet
		{
			get
			{
				return this._DatoPostet;
			}
			set
			{
				if ((this._DatoPostet != value))
				{
					this.OnDatoPostetChanging(value);
					this.SendPropertyChanging();
					this._DatoPostet = value;
					this.SendPropertyChanged("DatoPostet");
					this.OnDatoPostetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BildeSrc", DbType="NVarChar(50)")]
		public string BildeSrc
		{
			get
			{
				return this._BildeSrc;
			}
			set
			{
				if ((this._BildeSrc != value))
				{
					this.OnBildeSrcChanging(value);
					this.SendPropertyChanging();
					this._BildeSrc = value;
					this.SendPropertyChanged("BildeSrc");
					this.OnBildeSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="News_Author", Storage="_Authors", ThisKey="Id", OtherKey="NyhetID")]
		public EntitySet<Author> Authors
		{
			get
			{
				return this._Authors;
			}
			set
			{
				this._Authors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Authors(Author entity)
		{
			this.SendPropertyChanging();
			entity.News = this;
		}
		
		private void detach_Authors(Author entity)
		{
			this.SendPropertyChanging();
			entity.News = null;
		}
	}
}
#pragma warning restore 1591
